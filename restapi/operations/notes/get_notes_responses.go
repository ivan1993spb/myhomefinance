package notes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ivan1993spb/myhomefinance/models"
)

/*GetNotesOK returns note

swagger:response getNotesOK
*/
type GetNotesOK struct {

	// In: body
	Payload *models.Note `json:"body,omitempty"`
}

// NewGetNotesOK creates GetNotesOK with default headers values
func NewGetNotesOK() *GetNotesOK {
	return &GetNotesOK{}
}

// WithPayload adds the payload to the get notes o k response
func (o *GetNotesOK) WithPayload(payload *models.Note) *GetNotesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get notes o k response
func (o *GetNotesOK) SetPayload(payload *models.Note) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNotesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetNotesNotFound note not found

swagger:response getNotesNotFound
*/
type GetNotesNotFound struct {
}

// NewGetNotesNotFound creates GetNotesNotFound with default headers values
func NewGetNotesNotFound() *GetNotesNotFound {
	return &GetNotesNotFound{}
}

// WriteResponse to the client
func (o *GetNotesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

/*GetNotesServiceUnavailable server is currently unavailable

swagger:response getNotesServiceUnavailable
*/
type GetNotesServiceUnavailable struct {
}

// NewGetNotesServiceUnavailable creates GetNotesServiceUnavailable with default headers values
func NewGetNotesServiceUnavailable() *GetNotesServiceUnavailable {
	return &GetNotesServiceUnavailable{}
}

// WriteResponse to the client
func (o *GetNotesServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
}
