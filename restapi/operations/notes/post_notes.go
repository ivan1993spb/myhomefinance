package notes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostNotesHandlerFunc turns a function with the right signature into a post notes handler
type PostNotesHandlerFunc func(PostNotesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostNotesHandlerFunc) Handle(params PostNotesParams) middleware.Responder {
	return fn(params)
}

// PostNotesHandler interface for that can handle valid post notes params
type PostNotesHandler interface {
	Handle(PostNotesParams) middleware.Responder
}

// NewPostNotes creates a new http.Handler for the post notes operation
func NewPostNotes(ctx *middleware.Context, handler PostNotesHandler) *PostNotes {
	return &PostNotes{Context: ctx, Handler: handler}
}

/*PostNotes swagger:route POST /notes notes postNotes

PostNotes post notes API

*/
type PostNotes struct {
	Context *middleware.Context
	Handler PostNotesHandler
}

func (o *PostNotes) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPostNotesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
