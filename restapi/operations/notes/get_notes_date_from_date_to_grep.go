package notes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetNotesDateFromDateToGrepHandlerFunc turns a function with the right signature into a get notes date from date to grep handler
type GetNotesDateFromDateToGrepHandlerFunc func(GetNotesDateFromDateToGrepParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetNotesDateFromDateToGrepHandlerFunc) Handle(params GetNotesDateFromDateToGrepParams) middleware.Responder {
	return fn(params)
}

// GetNotesDateFromDateToGrepHandler interface for that can handle valid get notes date from date to grep params
type GetNotesDateFromDateToGrepHandler interface {
	Handle(GetNotesDateFromDateToGrepParams) middleware.Responder
}

// NewGetNotesDateFromDateToGrep creates a new http.Handler for the get notes date from date to grep operation
func NewGetNotesDateFromDateToGrep(ctx *middleware.Context, handler GetNotesDateFromDateToGrepHandler) *GetNotesDateFromDateToGrep {
	return &GetNotesDateFromDateToGrep{Context: ctx, Handler: handler}
}

/*GetNotesDateFromDateToGrep swagger:route GET /notes/{date_from}_{date_to}/grep notes getNotesDateFromDateToGrep

GetNotesDateFromDateToGrep get notes date from date to grep API

*/
type GetNotesDateFromDateToGrep struct {
	Context *middleware.Context
	Handler GetNotesDateFromDateToGrepHandler
}

func (o *GetNotesDateFromDateToGrep) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetNotesDateFromDateToGrepParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
